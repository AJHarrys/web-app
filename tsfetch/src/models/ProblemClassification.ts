// tslint:disable
// eslint-disable
/**
 * CoopCare API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Intervention,
    InterventionFromJSON,
    InterventionFromJSONTyped,
    InterventionToJSON,
    ProblemDomainModifier,
    ProblemDomainModifierFromJSON,
    ProblemDomainModifierFromJSONTyped,
    ProblemDomainModifierToJSON,
    ProblemTypeModifier,
    ProblemTypeModifierFromJSON,
    ProblemTypeModifierFromJSONTyped,
    ProblemTypeModifierToJSON,
} from './';

/**
 * 
 * @export
 * @interface ProblemClassification
 */
export interface ProblemClassification {
    /**
     * 
     * @type {string}
     * @memberof ProblemClassification
     */
    problemId: string;
    /**
     * 
     * @type {ProblemDomainModifier}
     * @memberof ProblemClassification
     */
    domainModifier: ProblemDomainModifier;
    /**
     * 
     * @type {ProblemTypeModifier}
     * @memberof ProblemClassification
     */
    typeModifier: ProblemTypeModifier;
    /**
     * 
     * @type {Array<string>}
     * @memberof ProblemClassification
     */
    symptoms: Array<string>;
    /**
     * 
     * @type {Array<Intervention>}
     * @memberof ProblemClassification
     */
    interventions: Array<Intervention>;
    /**
     * 
     * @type {string}
     * @memberof ProblemClassification
     */
    comment: string;
}

export function ProblemClassificationFromJSON(json: any): ProblemClassification {
    return ProblemClassificationFromJSONTyped(json, false);
}

export function ProblemClassificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProblemClassification {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'problemId': json['problemId'],
        'domainModifier': ProblemDomainModifierFromJSON(json['domainModifier']),
        'typeModifier': ProblemTypeModifierFromJSON(json['typeModifier']),
        'symptoms': json['symptoms'],
        'interventions': ((json['interventions'] as Array<any>).map(InterventionFromJSON)),
        'comment': json['comment'],
    };
}

export function ProblemClassificationToJSON(value?: ProblemClassification | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'problemId': value.problemId,
        'domainModifier': ProblemDomainModifierToJSON(value.domainModifier),
        'typeModifier': ProblemTypeModifierToJSON(value.typeModifier),
        'symptoms': value.symptoms,
        'interventions': ((value.interventions as Array<any>).map(InterventionToJSON)),
        'comment': value.comment,
    };
}


